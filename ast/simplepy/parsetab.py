
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocLTGTLTEGTEleftPLUSMINUSleftTIMESDIVIDEAND ASSIGN BREAK COLON COMMA CONTINUE DIVIDE ELSE EQ FALSE FLOAT GT GTE IF INT LBRACK LPAREN LSQBRACK LT LTE MINUS MOD NAME NEQ NONE OR PLUS PRINT RBRACK RETURN RPAREN RSQBRACK SEMICOLON STRING TIMES TRUE WHILEprogram : stmt_liststmt_list : stmt_list stmt\n                    | stmt\n        stmt : simple_stmt\n                | compound_stmt\n        compound_stmt : if_stmt\n                        | while_stmt\n                        | print\n        simple_stmt : small_stmt\n        small_stmt : test\n                    | flow_stmt\n        print : PRINT LPAREN small_stmt RPAREN flow_stmt : RETURN\n                    | BREAK\n                    | CONTINUE\n        while_stmt : WHILE test COLON suite\n                    | WHILE test COLON suite ELSE COLON suite\n        if_stmt : IF test COLON suite\n                    | IF test COLON suite ELSE COLON suite\n        suite : simple_stmt\n                | LBRACK stmt_list RBRACK\n        test : comparison OR test\n                | comparison AND test\n                | comparison\n        comparison : expr GT expr\n                    | expr LT expr\n                    | expr GTE expr\n                    | expr LTE expr\n                    | expr EQ expr\n                    | expr NEQ expr\n                    | expr\n        expr : NAME ASSIGN exprexpr : expr PLUS expr\n                | expr MINUS expr\n                | expr TIMES expr\n                | expr DIVIDE expr\n                | expr MOD expr\n                | factor\n        factor : PLUS factor\n                | MINUS factor\n                | atom_expratom_expr : atomatom : LPAREN list_expr RPAREN\n                | LSQBRACK list_expr RSQBRACK\n                | name\n                | number\n                | string\n                | TRUE\n                | FALSE\n                | NONE\n        list_expr : list_expr COMMA atom_expr\n                    | atom_expr\n        name : NAMEnumber : INT\n                | FLOAT\n        string : STRING'
    
_lr_action_items = {'INT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,40,41,42,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,82,83,84,85,86,87,90,91,92,93,94,],[1,-54,-6,1,-49,1,-4,-46,-24,-3,-14,1,-13,1,-41,-15,-45,-31,-11,-42,-56,1,1,-53,-7,-47,-48,-5,-50,-9,-8,-55,1,-10,-38,-53,-39,1,1,1,1,1,1,1,1,1,1,1,1,1,-2,-40,1,1,-44,1,-22,-23,1,1,-29,-27,-28,-34,-33,-36,-30,-35,-37,-26,-25,-32,-43,-20,1,-16,-18,-12,1,-21,1,1,-17,-19,]),'EQ':([1,4,7,14,16,17,20,21,24,26,27,30,33,36,37,40,57,61,70,71,72,74,75,78,80,],[-54,-49,-46,-41,-45,45,-42,-56,-53,-47,-48,-50,-55,-38,-53,-39,-40,-44,-34,-33,-36,-35,-37,-32,-43,]),'STRING':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,40,41,42,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,82,83,84,85,86,87,90,91,92,93,94,],[21,-54,-6,21,-49,21,-4,-46,-24,-3,-14,21,-13,21,-41,-15,-45,-31,-11,-42,-56,21,21,-53,-7,-47,-48,-5,-50,-9,-8,-55,21,-10,-38,-53,-39,21,21,21,21,21,21,21,21,21,21,21,21,21,-2,-40,21,21,-44,21,-22,-23,21,21,-29,-27,-28,-34,-33,-36,-30,-35,-37,-26,-25,-32,-43,-20,21,-16,-18,-12,21,-21,21,21,-17,-19,]),'LSQBRACK':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,40,41,42,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,82,83,84,85,86,87,90,91,92,93,94,],[3,-54,-6,3,-49,3,-4,-46,-24,-3,-14,3,-13,3,-41,-15,-45,-31,-11,-42,-56,3,3,-53,-7,-47,-48,-5,-50,-9,-8,-55,3,-10,-38,-53,-39,3,3,3,3,3,3,3,3,3,3,3,3,3,-2,-40,3,3,-44,3,-22,-23,3,3,-29,-27,-28,-34,-33,-36,-30,-35,-37,-26,-25,-32,-43,-20,3,-16,-18,-12,3,-21,3,3,-17,-19,]),'FALSE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,40,41,42,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,82,83,84,85,86,87,90,91,92,93,94,],[4,-54,-6,4,-49,4,-4,-46,-24,-3,-14,4,-13,4,-41,-15,-45,-31,-11,-42,-56,4,4,-53,-7,-47,-48,-5,-50,-9,-8,-55,4,-10,-38,-53,-39,4,4,4,4,4,4,4,4,4,4,4,4,4,-2,-40,4,4,-44,4,-22,-23,4,4,-29,-27,-28,-34,-33,-36,-30,-35,-37,-26,-25,-32,-43,-20,4,-16,-18,-12,4,-21,4,4,-17,-19,]),'PLUS':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,27,28,30,31,32,33,35,36,37,40,41,42,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,82,83,84,85,86,87,90,91,92,93,94,],[5,-54,-6,-49,5,-4,-46,-24,-3,-14,5,-13,5,-41,-15,-45,49,-11,-42,-56,5,5,-53,-7,-47,-48,-5,-50,-9,-8,-55,-10,-38,-53,-39,5,5,5,5,5,5,5,5,5,5,5,5,5,-2,-40,5,5,-44,-22,-23,5,5,49,49,49,-34,-33,-36,49,-35,49,49,49,49,-43,-20,5,-16,-18,-12,5,-21,5,5,-17,-19,]),'DIVIDE':([1,4,7,14,16,17,20,21,24,26,27,30,33,36,37,40,57,61,67,68,69,70,71,72,73,74,75,76,77,78,80,],[-54,-49,-46,-41,-45,50,-42,-56,-53,-47,-48,-50,-55,-38,-53,-39,-40,-44,50,50,50,50,50,-36,50,-35,50,50,50,50,-43,]),'NONE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,40,41,42,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,82,83,84,85,86,87,90,91,92,93,94,],[30,-54,-6,30,-49,30,-4,-46,-24,-3,-14,30,-13,30,-41,-15,-45,-31,-11,-42,-56,30,30,-53,-7,-47,-48,-5,-50,-9,-8,-55,30,-10,-38,-53,-39,30,30,30,30,30,30,30,30,30,30,30,30,30,-2,-40,30,30,-44,30,-22,-23,30,30,-29,-27,-28,-34,-33,-36,-30,-35,-37,-26,-25,-32,-43,-20,30,-16,-18,-12,30,-21,30,30,-17,-19,]),'LT':([1,4,7,14,16,17,20,21,24,26,27,30,33,36,37,40,57,61,70,71,72,74,75,78,80,],[-54,-49,-46,-41,-45,54,-42,-56,-53,-47,-48,-50,-55,-38,-53,-39,-40,-44,-34,-33,-36,-35,-37,-32,-43,]),'TIMES':([1,4,7,14,16,17,20,21,24,26,27,30,33,36,37,40,57,61,67,68,69,70,71,72,73,74,75,76,77,78,80,],[-54,-49,-46,-41,-45,52,-42,-56,-53,-47,-48,-50,-55,-38,-53,-39,-40,-44,52,52,52,52,52,-36,52,-35,52,52,52,52,-43,]),'CONTINUE':([0,1,2,4,6,7,8,9,10,12,14,15,16,17,18,20,21,22,24,25,26,27,28,30,31,32,33,35,36,37,40,56,57,59,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,82,83,84,85,86,87,90,91,92,93,94,],[15,-54,-6,-49,-4,-46,-24,-3,-14,-13,-41,-15,-45,-31,-11,-42,-56,15,-53,-7,-47,-48,-5,-50,-9,-8,-55,-10,-38,-53,-39,-2,-40,15,-44,-22,-23,15,15,-29,-27,-28,-34,-33,-36,-30,-35,-37,-26,-25,-32,-43,-20,15,-16,-18,-12,15,-21,15,15,-17,-19,]),'AND':([1,4,7,8,14,16,17,20,21,24,26,27,30,33,36,37,40,57,61,67,68,69,70,71,72,73,74,75,76,77,78,80,],[-54,-49,-46,42,-41,-45,-31,-42,-56,-53,-47,-48,-50,-55,-38,-53,-39,-40,-44,-29,-27,-28,-34,-33,-36,-30,-35,-37,-26,-25,-32,-43,]),'MINUS':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,27,28,30,31,32,33,35,36,37,40,41,42,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,82,83,84,85,86,87,90,91,92,93,94,],[23,-54,-6,-49,23,-4,-46,-24,-3,-14,23,-13,23,-41,-15,-45,48,-11,-42,-56,23,23,-53,-7,-47,-48,-5,-50,-9,-8,-55,-10,-38,-53,-39,23,23,23,23,23,23,23,23,23,23,23,23,23,-2,-40,23,23,-44,-22,-23,23,23,48,48,48,-34,-33,-36,48,-35,48,48,48,48,-43,-20,23,-16,-18,-12,23,-21,23,23,-17,-19,]),'GT':([1,4,7,14,16,17,20,21,24,26,27,30,33,36,37,40,57,61,70,71,72,74,75,78,80,],[-54,-49,-46,-41,-45,55,-42,-56,-53,-47,-48,-50,-55,-38,-53,-39,-40,-44,-34,-33,-36,-35,-37,-32,-43,]),'LTE':([1,4,7,14,16,17,20,21,24,26,27,30,33,36,37,40,57,61,70,71,72,74,75,78,80,],[-54,-49,-46,-41,-45,47,-42,-56,-53,-47,-48,-50,-55,-38,-53,-39,-40,-44,-34,-33,-36,-35,-37,-32,-43,]),'LBRACK':([65,66,91,92,],[83,83,83,83,]),'NAME':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,40,41,42,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,82,83,84,85,86,87,90,91,92,93,94,],[24,-54,-6,37,-49,37,-4,-46,-24,-3,-14,24,-13,24,-41,-15,-45,-31,-11,-42,-56,24,37,-53,-7,-47,-48,-5,-50,-9,-8,-55,37,-10,-38,-53,-39,24,24,24,24,24,24,24,24,24,24,24,24,24,-2,-40,24,24,-44,37,-22,-23,24,24,-29,-27,-28,-34,-33,-36,-30,-35,-37,-26,-25,-32,-43,-20,24,-16,-18,-12,24,-21,24,24,-17,-19,]),'BREAK':([0,1,2,4,6,7,8,9,10,12,14,15,16,17,18,20,21,22,24,25,26,27,28,30,31,32,33,35,36,37,40,56,57,59,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,82,83,84,85,86,87,90,91,92,93,94,],[10,-54,-6,-49,-4,-46,-24,-3,-14,-13,-41,-15,-45,-31,-11,-42,-56,10,-53,-7,-47,-48,-5,-50,-9,-8,-55,-10,-38,-53,-39,-2,-40,10,-44,-22,-23,10,10,-29,-27,-28,-34,-33,-36,-30,-35,-37,-26,-25,-32,-43,-20,10,-16,-18,-12,10,-21,10,10,-17,-19,]),'COMMA':([1,4,7,16,20,21,26,27,30,33,37,38,39,60,61,80,81,],[-54,-49,-46,-45,-42,-56,-47,-48,-50,-55,-53,-52,62,62,-44,-43,-51,]),'OR':([1,4,7,8,14,16,17,20,21,24,26,27,30,33,36,37,40,57,61,67,68,69,70,71,72,73,74,75,76,77,78,80,],[-54,-49,-46,41,-41,-45,-31,-42,-56,-53,-47,-48,-50,-55,-38,-53,-39,-40,-44,-29,-27,-28,-34,-33,-36,-30,-35,-37,-26,-25,-32,-43,]),'RBRACK':([1,2,4,6,7,8,9,10,12,14,15,16,17,18,20,21,24,25,26,27,28,30,31,32,33,35,36,37,40,56,57,61,63,64,67,68,69,70,71,72,73,74,75,76,77,78,80,82,84,85,86,87,90,93,94,],[-54,-6,-49,-4,-46,-24,-3,-14,-13,-41,-15,-45,-31,-11,-42,-56,-53,-7,-47,-48,-5,-50,-9,-8,-55,-10,-38,-53,-39,-2,-40,-44,-22,-23,-29,-27,-28,-34,-33,-36,-30,-35,-37,-26,-25,-32,-43,-20,-16,-18,-12,90,-21,-17,-19,]),'TRUE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,40,41,42,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,82,83,84,85,86,87,90,91,92,93,94,],[27,-54,-6,27,-49,27,-4,-46,-24,-3,-14,27,-13,27,-41,-15,-45,-31,-11,-42,-56,27,27,-53,-7,-47,-48,-5,-50,-9,-8,-55,27,-10,-38,-53,-39,27,27,27,27,27,27,27,27,27,27,27,27,27,-2,-40,27,27,-44,27,-22,-23,27,27,-29,-27,-28,-34,-33,-36,-30,-35,-37,-26,-25,-32,-43,-20,27,-16,-18,-12,27,-21,27,27,-17,-19,]),'GTE':([1,4,7,14,16,17,20,21,24,26,27,30,33,36,37,40,57,61,70,71,72,74,75,78,80,],[-54,-49,-46,-41,-45,46,-42,-56,-53,-47,-48,-50,-55,-38,-53,-39,-40,-44,-34,-33,-36,-35,-37,-32,-43,]),'PRINT':([0,1,2,4,6,7,8,9,10,12,14,15,16,17,18,20,21,22,24,25,26,27,28,30,31,32,33,35,36,37,40,56,57,61,63,64,67,68,69,70,71,72,73,74,75,76,77,78,80,82,83,84,85,86,87,90,93,94,],[29,-54,-6,-49,-4,-46,-24,-3,-14,-13,-41,-15,-45,-31,-11,-42,-56,29,-53,-7,-47,-48,-5,-50,-9,-8,-55,-10,-38,-53,-39,-2,-40,-44,-22,-23,-29,-27,-28,-34,-33,-36,-30,-35,-37,-26,-25,-32,-43,-20,29,-16,-18,-12,29,-21,-17,-19,]),'WHILE':([0,1,2,4,6,7,8,9,10,12,14,15,16,17,18,20,21,22,24,25,26,27,28,30,31,32,33,35,36,37,40,56,57,61,63,64,67,68,69,70,71,72,73,74,75,76,77,78,80,82,83,84,85,86,87,90,93,94,],[11,-54,-6,-49,-4,-46,-24,-3,-14,-13,-41,-15,-45,-31,-11,-42,-56,11,-53,-7,-47,-48,-5,-50,-9,-8,-55,-10,-38,-53,-39,-2,-40,-44,-22,-23,-29,-27,-28,-34,-33,-36,-30,-35,-37,-26,-25,-32,-43,-20,11,-16,-18,-12,11,-21,-17,-19,]),'RETURN':([0,1,2,4,6,7,8,9,10,12,14,15,16,17,18,20,21,22,24,25,26,27,28,30,31,32,33,35,36,37,40,56,57,59,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,82,83,84,85,86,87,90,91,92,93,94,],[12,-54,-6,-49,-4,-46,-24,-3,-14,-13,-41,-15,-45,-31,-11,-42,-56,12,-53,-7,-47,-48,-5,-50,-9,-8,-55,-10,-38,-53,-39,-2,-40,12,-44,-22,-23,12,12,-29,-27,-28,-34,-33,-36,-30,-35,-37,-26,-25,-32,-43,-20,12,-16,-18,-12,12,-21,12,12,-17,-19,]),'IF':([0,1,2,4,6,7,8,9,10,12,14,15,16,17,18,20,21,22,24,25,26,27,28,30,31,32,33,35,36,37,40,56,57,61,63,64,67,68,69,70,71,72,73,74,75,76,77,78,80,82,83,84,85,86,87,90,93,94,],[13,-54,-6,-49,-4,-46,-24,-3,-14,-13,-41,-15,-45,-31,-11,-42,-56,13,-53,-7,-47,-48,-5,-50,-9,-8,-55,-10,-38,-53,-39,-2,-40,-44,-22,-23,-29,-27,-28,-34,-33,-36,-30,-35,-37,-26,-25,-32,-43,-20,13,-16,-18,-12,13,-21,-17,-19,]),'NEQ':([1,4,7,14,16,17,20,21,24,26,27,30,33,36,37,40,57,61,70,71,72,74,75,78,80,],[-54,-49,-46,-41,-45,51,-42,-56,-53,-47,-48,-50,-55,-38,-53,-39,-40,-44,-34,-33,-36,-35,-37,-32,-43,]),'FLOAT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,40,41,42,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,82,83,84,85,86,87,90,91,92,93,94,],[33,-54,-6,33,-49,33,-4,-46,-24,-3,-14,33,-13,33,-41,-15,-45,-31,-11,-42,-56,33,33,-53,-7,-47,-48,-5,-50,-9,-8,-55,33,-10,-38,-53,-39,33,33,33,33,33,33,33,33,33,33,33,33,33,-2,-40,33,33,-44,33,-22,-23,33,33,-29,-27,-28,-34,-33,-36,-30,-35,-37,-26,-25,-32,-43,-20,33,-16,-18,-12,33,-21,33,33,-17,-19,]),'COLON':([1,4,7,8,14,16,17,20,21,24,26,27,30,33,36,37,40,43,44,57,61,63,64,67,68,69,70,71,72,73,74,75,76,77,78,80,88,89,],[-54,-49,-46,-24,-41,-45,-31,-42,-56,-53,-47,-48,-50,-55,-38,-53,-39,65,66,-40,-44,-22,-23,-29,-27,-28,-34,-33,-36,-30,-35,-37,-26,-25,-32,-43,91,92,]),'LPAREN':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,40,41,42,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,82,83,84,85,86,87,90,91,92,93,94,],[34,-54,-6,34,-49,34,-4,-46,-24,-3,-14,34,-13,34,-41,-15,-45,-31,-11,-42,-56,34,34,-53,-7,-47,-48,-5,59,-50,-9,-8,-55,34,-10,-38,-53,-39,34,34,34,34,34,34,34,34,34,34,34,34,34,-2,-40,34,34,-44,34,-22,-23,34,34,-29,-27,-28,-34,-33,-36,-30,-35,-37,-26,-25,-32,-43,-20,34,-16,-18,-12,34,-21,34,34,-17,-19,]),'MOD':([1,4,7,14,16,17,20,21,24,26,27,30,33,36,37,40,57,61,67,68,69,70,71,72,73,74,75,76,77,78,80,],[-54,-49,-46,-41,-45,53,-42,-56,-53,-47,-48,-50,-55,-38,-53,-39,-40,-44,53,53,53,-34,-33,-36,53,-35,53,53,53,53,-43,]),'RPAREN':([1,4,7,8,10,12,14,15,16,17,18,20,21,24,26,27,30,33,35,36,37,38,40,57,60,61,63,64,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,],[-54,-49,-46,-24,-14,-13,-41,-15,-45,-31,-11,-42,-56,-53,-47,-48,-50,-55,-10,-38,-53,-52,-39,-40,80,-44,-22,-23,-29,-27,-28,-34,-33,-36,-30,-35,-37,-26,-25,-32,86,-43,-51,]),'$end':([1,2,4,6,7,8,9,10,12,14,15,16,17,18,19,20,21,22,24,25,26,27,28,30,31,32,33,35,36,37,40,56,57,61,63,64,67,68,69,70,71,72,73,74,75,76,77,78,80,82,84,85,86,90,93,94,],[-54,-6,-49,-4,-46,-24,-3,-14,-13,-41,-15,-45,-31,-11,0,-42,-56,-1,-53,-7,-47,-48,-5,-50,-9,-8,-55,-10,-38,-53,-39,-2,-40,-44,-22,-23,-29,-27,-28,-34,-33,-36,-30,-35,-37,-26,-25,-32,-43,-20,-16,-18,-12,-21,-17,-19,]),'ASSIGN':([24,],[58,]),'RSQBRACK':([1,4,7,16,20,21,26,27,30,33,37,38,39,61,80,81,],[-54,-49,-46,-45,-42,-56,-47,-48,-50,-55,-53,-52,61,-44,-43,-51,]),'ELSE':([1,4,7,8,10,12,14,15,16,17,18,20,21,24,26,27,30,31,33,35,36,37,40,57,61,63,64,67,68,69,70,71,72,73,74,75,76,77,78,80,82,84,85,90,],[-54,-49,-46,-24,-14,-13,-41,-15,-45,-31,-11,-42,-56,-53,-47,-48,-50,-9,-55,-10,-38,-53,-39,-40,-44,-22,-23,-29,-27,-28,-34,-33,-36,-30,-35,-37,-26,-25,-32,-43,-20,88,89,-21,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'string':([0,3,5,11,13,22,23,34,41,42,45,46,47,48,49,50,51,52,53,54,55,58,59,62,65,66,83,87,91,92,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'if_stmt':([0,22,83,87,],[2,2,2,2,]),'expr':([0,11,13,22,41,42,45,46,47,48,49,50,51,52,53,54,55,58,59,65,66,83,87,91,92,],[17,17,17,17,17,17,67,68,69,70,71,72,73,74,75,76,77,78,17,17,17,17,17,17,17,]),'flow_stmt':([0,22,59,65,66,83,87,91,92,],[18,18,18,18,18,18,18,18,18,]),'number':([0,3,5,11,13,22,23,34,41,42,45,46,47,48,49,50,51,52,53,54,55,58,59,62,65,66,83,87,91,92,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'atom':([0,3,5,11,13,22,23,34,41,42,45,46,47,48,49,50,51,52,53,54,55,58,59,62,65,66,83,87,91,92,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'compound_stmt':([0,22,83,87,],[28,28,28,28,]),'factor':([0,5,11,13,22,23,41,42,45,46,47,48,49,50,51,52,53,54,55,58,59,65,66,83,87,91,92,],[36,40,36,36,36,57,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'simple_stmt':([0,22,65,66,83,87,91,92,],[6,6,82,82,6,6,82,82,]),'stmt':([0,22,83,87,],[9,56,9,56,]),'print':([0,22,83,87,],[32,32,32,32,]),'stmt_list':([0,83,],[22,87,]),'atom_expr':([0,3,5,11,13,22,23,34,41,42,45,46,47,48,49,50,51,52,53,54,55,58,59,62,65,66,83,87,91,92,],[14,38,14,14,14,14,14,38,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,81,14,14,14,14,14,14,]),'program':([0,],[19,]),'suite':([65,66,91,92,],[84,85,93,94,]),'name':([0,3,5,11,13,22,23,34,41,42,45,46,47,48,49,50,51,52,53,54,55,58,59,62,65,66,83,87,91,92,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'test':([0,11,13,22,41,42,59,65,66,83,87,91,92,],[35,43,44,35,63,64,35,35,35,35,35,35,35,]),'comparison':([0,11,13,22,41,42,59,65,66,83,87,91,92,],[8,8,8,8,8,8,8,8,8,8,8,8,8,]),'while_stmt':([0,22,83,87,],[25,25,25,25,]),'small_stmt':([0,22,59,65,66,83,87,91,92,],[31,31,79,31,31,31,31,31,31,]),'list_expr':([3,34,],[39,60,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> stmt_list','program',1,'p_program','parser.py',16),
  ('stmt_list -> stmt_list stmt','stmt_list',2,'p_stmt_list','parser.py',20),
  ('stmt_list -> stmt','stmt_list',1,'p_stmt_list','parser.py',21),
  ('stmt -> simple_stmt','stmt',1,'p_stmt','parser.py',32),
  ('stmt -> compound_stmt','stmt',1,'p_stmt','parser.py',33),
  ('compound_stmt -> if_stmt','compound_stmt',1,'p_compound_stmt','parser.py',39),
  ('compound_stmt -> while_stmt','compound_stmt',1,'p_compound_stmt','parser.py',40),
  ('compound_stmt -> print','compound_stmt',1,'p_compound_stmt','parser.py',41),
  ('simple_stmt -> small_stmt','simple_stmt',1,'p_simple_stmt','parser.py',47),
  ('small_stmt -> test','small_stmt',1,'p_small_stmt','parser.py',54),
  ('small_stmt -> flow_stmt','small_stmt',1,'p_small_stmt','parser.py',55),
  ('print -> PRINT LPAREN small_stmt RPAREN','print',4,'p_print','parser.py',60),
  ('flow_stmt -> RETURN','flow_stmt',1,'p_flow_stmt','parser.py',65),
  ('flow_stmt -> BREAK','flow_stmt',1,'p_flow_stmt','parser.py',66),
  ('flow_stmt -> CONTINUE','flow_stmt',1,'p_flow_stmt','parser.py',67),
  ('while_stmt -> WHILE test COLON suite','while_stmt',4,'p_while_stmt','parser.py',73),
  ('while_stmt -> WHILE test COLON suite ELSE COLON suite','while_stmt',7,'p_while_stmt','parser.py',74),
  ('if_stmt -> IF test COLON suite','if_stmt',4,'p_if_stmt','parser.py',83),
  ('if_stmt -> IF test COLON suite ELSE COLON suite','if_stmt',7,'p_if_stmt','parser.py',84),
  ('suite -> simple_stmt','suite',1,'p_suite','parser.py',92),
  ('suite -> LBRACK stmt_list RBRACK','suite',3,'p_suite','parser.py',93),
  ('test -> comparison OR test','test',3,'p_test','parser.py',103),
  ('test -> comparison AND test','test',3,'p_test','parser.py',104),
  ('test -> comparison','test',1,'p_test','parser.py',105),
  ('comparison -> expr GT expr','comparison',3,'p_comparison','parser.py',114),
  ('comparison -> expr LT expr','comparison',3,'p_comparison','parser.py',115),
  ('comparison -> expr GTE expr','comparison',3,'p_comparison','parser.py',116),
  ('comparison -> expr LTE expr','comparison',3,'p_comparison','parser.py',117),
  ('comparison -> expr EQ expr','comparison',3,'p_comparison','parser.py',118),
  ('comparison -> expr NEQ expr','comparison',3,'p_comparison','parser.py',119),
  ('comparison -> expr','comparison',1,'p_comparison','parser.py',120),
  ('expr -> NAME ASSIGN expr','expr',3,'p_assign_expr','parser.py',128),
  ('expr -> expr PLUS expr','expr',3,'p_expr','parser.py',134),
  ('expr -> expr MINUS expr','expr',3,'p_expr','parser.py',135),
  ('expr -> expr TIMES expr','expr',3,'p_expr','parser.py',136),
  ('expr -> expr DIVIDE expr','expr',3,'p_expr','parser.py',137),
  ('expr -> expr MOD expr','expr',3,'p_expr','parser.py',138),
  ('expr -> factor','expr',1,'p_expr','parser.py',139),
  ('factor -> PLUS factor','factor',2,'p_factor','parser.py',148),
  ('factor -> MINUS factor','factor',2,'p_factor','parser.py',149),
  ('factor -> atom_expr','factor',1,'p_factor','parser.py',150),
  ('atom_expr -> atom','atom_expr',1,'p_atom_expr','parser.py',156),
  ('atom -> LPAREN list_expr RPAREN','atom',3,'p_atom','parser.py',163),
  ('atom -> LSQBRACK list_expr RSQBRACK','atom',3,'p_atom','parser.py',164),
  ('atom -> name','atom',1,'p_atom','parser.py',165),
  ('atom -> number','atom',1,'p_atom','parser.py',166),
  ('atom -> string','atom',1,'p_atom','parser.py',167),
  ('atom -> TRUE','atom',1,'p_atom','parser.py',168),
  ('atom -> FALSE','atom',1,'p_atom','parser.py',169),
  ('atom -> NONE','atom',1,'p_atom','parser.py',170),
  ('list_expr -> list_expr COMMA atom_expr','list_expr',3,'p_list_expr','parser.py',186),
  ('list_expr -> atom_expr','list_expr',1,'p_list_expr','parser.py',187),
  ('name -> NAME','name',1,'p_name','parser.py',197),
  ('number -> INT','number',1,'p_number','parser.py',201),
  ('number -> FLOAT','number',1,'p_number','parser.py',202),
  ('string -> STRING','string',1,'p_string','parser.py',207),
]
